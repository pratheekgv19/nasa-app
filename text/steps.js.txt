import { loadFeature, defineFeature } from "jest-cucumber";
const feature=loadFeature("./cucumber/features/Asteroid.feature")
import { render, fireEvent, screen } from '@testing-library/react';
import AsteroidInput from '../../src/components/AsteroidInput'
import { shallow, ShallowWrapper } from "enzyme";
type AsteroidInputProps = React.ComponentProps<typeof AsteroidInput>;

const screenProps = {
    
    id: "3542519",
    };
defineFeature(feature, (scenario) => {
    let mockFetch: jest.Mock;
  
    beforeAll(() => {
      mockFetch = jest.fn();
      global.fetch = mockFetch;
    });
  
    beforeEach(() => {
      mockFetch.mockClear();
    });
  
    scenario('User can search for an asteroid by ID', ({ given, when, then }) => {
      let mockResponse = {};
      let AstroidWrapper: ShallowWrapper;
  
      given('the user is on the home page', () => {
        AstroidWrapper = shallow(<AsteroidInput {...screenProps} />);
        // No need to implement anything here, as the component is rendered in each test case
      });
  
      when('the user enters a valid asteroid ID and clicks on submit', async () => {
        const asteroidId = '3542519';
        mockResponse = {
          name: '3542519 (2000 SN8)',
          nasa_jpl_url: 'http://ssd.jpl.nasa.gov/sbdb.cgi?sstr=3542519',
          is_potentially_hazardous_asteroid: true,
        };
        mockFetch.mockResolvedValueOnce({
          json: () => Promise.resolve(mockResponse),
        });
        render(<AsteroidInput />)
        const input = screen.getByTestId('input');
        const submitBtn = screen.getByTestId('submit');
        fireEvent.change(input, { target: { value: asteroidId } });
        fireEvent.click(submitBtn);
      });
  
      then('the user should see the asteroid details', () => {
        expect(screen.getByTestId('name')).toHaveTextContent(mockResponse.name);
        expect(screen.getByTestId('url')).toHaveTextContent(mockResponse.nasa_jpl_url);
        expect(screen.getByTestId('isHazardous')).toHaveTextContent('Yes');
       });
    });
})





